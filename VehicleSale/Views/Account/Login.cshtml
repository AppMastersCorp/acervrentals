@using VehicleSale.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = null;
}
<link href="~/assets/css/main.css" rel="stylesheet" />
<link href="~/assets/css/bootstrap.min.css" rel="stylesheet">
<script src="~/assets/js/jquery.min.js"></script>
<script>
    $(function () {

        if (localStorage.chkbx && localStorage.chkbx != '') {
            $('#RememberMe').attr('checked', 'checked');
            $('#Email').val(localStorage.usrname);
            $('#Password').val(localStorage.pass);
        }
        else {
            $('#RememberMe').removeAttr('checked');
            $('#Email').val('');
            $('#Password').val('');
        }

        $('#RememberMe').click(function () {

            if ($('#RememberMe').is(':checked')) {
                // save username and password
                localStorage.usrname = $('#Email').val();
                localStorage.pass = $('#Password').val();
                localStorage.chkbx = $('#RememberMe').val();
            } else {
                localStorage.usrname = '';
                localStorage.pass = '';
                localStorage.chkbx = '';
            }
        });
    });
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
        //alert(response);
        console.log('statusChangeCallback');
        console.log(response);
        //alert(response.status);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
            FB.api('/me?fields=id,first_name,middle_name,last_name,birthday,email', LoadValues);
        } else if (response.status === 'not_authorized') {
            // The person is logged into Facebook, but not your app.
            document.getElementById('status').innerHTML = 'Please log ' +
              'into this app.';
        } else {
            // The person is not logged into Facebook, so we're not sure if
            // they are logged into this app or not.
            document.getElementById('status').innerHTML = 'Please log ' +
              'into Facebook.';
        }
    }


    function checkLoginState() {
        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    }



    window.fbAsyncInit = function () {
        FB.init({
            appId: '1115200051941097', //102397276824905
            cookie: true,  // enable cookies to allow the server to access
            // the session
            xfbml: true,  // parse social plugins on this page
            scope: 'id,first_name,middle_name,last_name,birthday,email',
            version: 'v2.5' // use graph api version 2.5
        });


    };

    // Load the SDK asynchronously
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));



    function LoadValues(me) {
        var Email = me.email;
        var Name = me.first_name + ' ' + me.last_name;
        var Provider = "Facebook";
        var ProviderKey = me.id;


        $.ajax({
            url: '@Url.Action("Login_Socail", "Account")',
            dataType: "json",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ Email: Email, Name: Name, Provider: Provider, ProviderKey: ProviderKey }),
            success: function (data) {
                // window.location.reload();
                if (data.success == true) {
                    window.location.href = "/Account/Register"
                }
                else {
                    parent.location.reload();
                    //alert("Email Id already Exit??");
                }
            },
            error: function (data) {
                alert(JSON.stringify(data));
            }
        });

    }

</script>
<script src="https://apis.google.com/js/platform.js" async defer></script>
<script src="https://apis.google.com/js/api:client.js"></script>
<script>

    $(document).ready(function () {
        startApp();
    });
    var googleUser = {};
    var startApp = function () {
        gapi.load('auth2', function () {
            // Retrieve the singleton for the GoogleAuth library and set up the client.
            auth2 = gapi.auth2.init({
                client_id: '882730954721-5smmkn4uq0ojlkrjma1c48klnlehg6md.apps.googleusercontent.com', //1051512527509-vspgsp3b0npnk94q861ji0cnvl69snas.apps.googleusercontent.com
                cookiepolicy: 'single_host_origin',
                // Request scopes in addition to 'profile' and 'email'
                //scope: 'additional_scope'
            });
            attachSignin(document.getElementById('customBtn'));
        });
    };

    function attachSignin(element) {
        console.log(element.id);
        auth2.attachClickHandler(element, {},
            function (googleUser) {
                var profile = googleUser.getBasicProfile();
                var name = profile.getName().split(' ');
                var first_name = name[0];
                var last_name = name[1];
                var middle_name = "";
                var token_id = googleUser.getAuthResponse().id_token;
                if (profile.getName()) {

                    var Email = profile.getEmail();
                    var Name = profile.getName();
                    var Provider = "Google";
                    var ProviderKey = token_id;


                    $.ajax({
                        url: '@Url.Action("Login_Socail", "Account")',
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ Email: Email, Name: Name, Provider: Provider, ProviderKey: ProviderKey }),
                        success: function (data) {

                            // window.location.reload();
                            //var chk = JSON.stringify(data);
                            if (data.success == true) {
                                window.location.href = "/Account/Register"
                            }
                            else {
                                parent.location.reload();
                            }
                        },
                        error: function (data) {
                            alert(JSON.stringify(data));
                        }
                    });
                }



            }, function (error) {
                alert(JSON.stringify(error, undefined, 2));
            });
    }
</script>
<script>
    function onSuccess(googleUser) {
        console.log('Logged in as: ' + googleUser.getBasicProfile().getName());
    }
    function onFailure(error) {
        console.log(error);
    }
    function renderButton() {
        gapi.signin2.render('my-signin2', {
            'scope': 'profile email',
            //'width': 240,
            //'height': 50,
            'longtitle': true,

            //'theme': 'dark',
            'onsuccess': onSuccess,
            'onfailure': onFailure
        });
    }
</script>
<section class="panel panel-info login_div">
    @*<header class="panel-heading">
            <h3 class="panel-title">@ViewBag.Title.</h3>
        </header>*@
    <div class="panel-body">


        <div class="col-md-12 heading_login">

            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                @Html.Raw(ViewBag.Message)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email)

                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password)

                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <div class="checkbox">
                        @Html.CheckBoxFor(m => m.RememberMe)
                        @Html.LabelFor(m => m.RememberMe, new { @class = "remeber_me" })
                    </div>
                </div>
                    <div class="form-group">
                        <input type="submit" value="Log in" class="btn btn-primary" />
                        <span id="messsageId" style="color:red;">@ViewBag.Error</span>
                    </div>
                        <div class="form-group">
                            <a id="customBtn" href="#" onclick="startApp();" class="btn btn-block googleplus btn-social btn btn-danger">Sign Up with Google+  </a>
                        </div>

                        <div id="facebookbtn" class="form-group">
                            <fb:login-button class="btn btn-block btn-facebook btn-social facebook" style="background: #4763B3" scope="public_profile,email" onlogin="checkLoginState();">
                                Sign Up with Facebook
                            </fb:login-button>
                        </div>
                        <p>
                            @Html.ActionLink("Register as a new user", "Register")
                        </p>
                        <p>
                            <a href="/Account/ForgotPassword">Forgot Password</a>
                            @*@Html.ActionLink("Forgot Password", "ForgotPassword",null,new { @data-toggle="forgot-modal"})*@
                        </p>
            }

        </div>

    </div>

</section>






