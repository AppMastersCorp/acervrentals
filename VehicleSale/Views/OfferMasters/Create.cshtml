@model VehicleSale.ViewModels.OffermasterVM

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<section class="panel panel-info">
    <header class="panel-heading">
        <h3 class="panel-title">Offers</h3>
    </header>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="col-sm-6">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleID, "Vehicle")

                    @Html.DropDownList("VehicleID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VehicleID, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.NoOfNights)
                    @Html.EditorFor(model => model.NoOfNights, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoOfNights, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location)
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ValidUntillDate)
                    @Html.EditorFor(model => model.ValidUntillDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ValidUntillDate, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PickUp)
                    @Html.EditorFor(model => model.PickUp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PickUp, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnDate)
                    @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
                    <label id="error1" class="text-danger"></label>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OfferPrice)
                    @Html.EditorFor(model => model.OfferPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OfferPrice, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DownPaymentPercentage)
                    @Html.EditorFor(model => model.DownPaymentPercentage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DownPaymentPercentage, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive)
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">

                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Back to List", "Index", new object { }, new { @class = "btn btn-primary" })
                </div>
            </div>
        }
    </div>
    @*<script src="~/Content/Scripts/lib/jquery/ui/jquery-ui.js"></script>*@
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    @*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>*@
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            $("#ValidUntillDate").datepicker({ minDate: 0 });
            $("#PickUp").datepicker({ minDate: 0 });
            $("#ReturnDate").datepicker({ minDate: 0 });

            $("#ReturnDate").on("change",function () {
                var PickUpdate = new Date($("#PickUp").val());
                var ReturnDate = new Date($("#ReturnDate").val());
                if (PickUpdate > ReturnDate)
                {
                    $('#error1').html("Please enter return date greater then Pickup date ")
                }
                else
                {
                    $('#error1').html("");
                }
           });
        });
    </script>

</section>